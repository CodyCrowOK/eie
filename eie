#!/usr/bin/perl

use strict;
use warnings;
use diagnostics;
use feature ":5.10";
use File::Path qw(remove_tree);
use Digest::SHA1 qw(sha1_hex);
use File::Cat;
use File::Touch;
use File::Slurp;
use File::Copy;
use Cwd;
use Scalar::Util qw(looks_like_number);

my $cwd = cwd();
our $eie_dir = "${cwd}/.eie";

#create directories and what have you
sub eie_init() {
	mkdir $eie_dir or die("Could not create eie directory.\n");
	mkdir "${eie_dir}/store" or die("Could not create eie directory 2.\n");
	mkdir "${eie_dir}/info" or die("Could not create eie directory 3.\n");
	touch("${eie_dir}/addfiles") or die $!;
}
sub eie_commit() {
	my $addfiles_contents = read_file("${eie_dir}/addfiles") or warn "Nothing to do here.";
	chomp($addfiles_contents);
	my @commit_files = split(/\n/, $addfiles_contents) or die $!;
	
	my $commit_time = time;
	foreach (@commit_files) {
		
		print $_."\n";
		my $file_text = read_file($_) or die $!;
		my $sha1 = sha1_hex($file_text) or die $!;
		my $destination = "${eie_dir}/store/".$commit_time."_".$sha1;
		copy($_, $destination);
		
		touch("${eie_dir}/info/${commit_time}") or die $!;
		open(my $info_file, ">>", "${eie_dir}/store/${commit_time}") or die $!;
		my $info_string = "${_},${commit_time}_${sha1}";
		print $info_file $info_string."\n";
		close $info_file;
	}
	eie_clear();
}
sub eie_kill_all() {
	remove_tree($eie_dir) or die("Could not rm eie directory.\n");
}

#Adds @ARGV's to list of files to be processed on commit.
sub eie_add() {
	foreach (@ARGV) {
		if ($_  ne "add") {
			open(my $addfiles_file, ">>", "${eie_dir}/addfiles") or die $!;
			print $addfiles_file $_."\n";
			close $addfiles_file;
		}
	}
	
}

sub eie_clear() {
	unlink "${eie_dir}/addfiles" or die "Nothing to do here.";
}

sub eie_history_file {
	our $arg2 = $_[0];
	my $storedir = "${eie_dir}/store";
	opendir(my $dir, $storedir) or die $!;
	foreach (my $storedirfile = readdir($dir)) {
		print $storedirfile;
		if (length($storedirfile) == 10 && looks_like_number($storedirfile)) {
			my $commitinfo = read_file($storedirfile) or die $!;
			if ($commitinfo =~ m/$arg2/) {
				print $storedirfile;
			}
		}
	}
	closedir($dir);
}

given($ARGV[0]) {
	when ("init") {
		eie_init();
		break;
	}
	when ("add") {
		eie_add();
		break;
	}
	when ("commit") {
		eie_commit();
		break;
	}
	when ("killall") {
		eie_kill_all();
		break;
	}
	when ("history") {
		if(!defined($ARGV[1])) {
			eie_history_all();
		}
		else {
			eie_history_file($ARGV[1]);
		}
		break;
	}
}